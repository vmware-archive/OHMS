#
# (C) Copyright IBM Corp. 2006, 2013
#
# THIS FILE IS PROVIDED UNDER THE TERMS OF THE ECLIPSE PUBLIC LICENSE 
# ("AGREEMENT"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS FILE 
# CONSTITUTES RECIPIENTS ACCEPTANCE OF THE AGREEMENT.
#
# You can obtain a current copy of the Eclipse Public License from
# http://www.opensource.org/licenses/eclipse-1.0.php

#
# SBLIM CIM Client for Java configuration properties.
#
# This file is used to specify the properties for the CIM Client. Properties 
# included in this file can be used to change the behavior of the CIM Client.
#
# By default, all of the properties are commented out and additionally set to 
# their default values. To change a property, just remove the leading '#' and 
# modify the value as you like.
#

# Sets the minimum level for messages to be written to the log file.
# Type: Discrete
# Recognition: Startup
# Range: OFF, SEVERE, WARNING, INFO, CONFIG, ALL
# Default: OFF (disables file logging completely)
#
#sblim.wbem.logFileLevel=OFF

# A string specifying the location of the log file. The string may include
# the following special components that will be replaced at runtime:
#
# "/" the local pathname separator
# "%t" the system temporary directory
# "%h" the value of the "user.home" system property
# "%g" the generation number to distinguish rotated logs
# "%u" a unique number to resolve conflicts
# "%%" translates to a single percent sign
#
# Thus for example a pattern of "%t/java%g.log" with a count
# of 3 would typically cause log files to be written on Unix to
# "/var/tmp/java2.log"
#
# Type: String
# Recognition: Startup
# Default: "%t/cimclient_log_%g.txt"
#
#sblim.wbem.logFileLocation=%t/cimclient_log_%g.txt

# Sets the maximum size in bytes of a single log file. When the limit is
# reached a new file is created. A limit of zero will create a new file
# for each log record !
#
# Type: Integer
# Recognition: Startup
# Range: 0 .. Integer.MAX_VALUE
# Default: 5.242.880
#
#sblim.wbem.logFileSizeLimit=5242880

# Sets the number of log files to cycle through. When the number is
# exceeeded the oldest file is dropped.
#
# Type: Integer
# Recognition: Startup
# Range: 1 .. Integer.MAX_VALUE
# Default: 3
#
#sblim.wbem.logFileCount=3

# Sets the minimum level for messages to be written to the console logger
# file. 
#
# Type: Discrete
# Recognition: Startup
# Range: OFF, SEVERE, WARNING, INFO, CONFIG, ALL
# Default: OFF (disables console logging completely)
#
#sblim.wbem.logConsoleLevel=OFF

# Sets the type of the console logger. Maybe either message 
# log or trace log.
# 
# Type: Discrete
# Recognition: Startup
# Range: MESSAGE, TRACE
# Default: MESSAGE
#
#sblim.wbem.logConsoleType=MESSAGE

# Sets the minimum level for messages to be written to the trace file.
#
# Type: Discrete
# Recognition: Startup
# Range: OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL
# Default: OFF (disables file tracing completely)
#
#sblim.wbem.traceFileLevel=OFF

# A string specifying the location of the trace file. The string may
# include the following special components that will be replaced at runtime:
#
# "/" the local pathname separator
# "%t" the system temporary directory
# "%h" the value of the "user.home" system property
# "%g" the generation number to distinguish rotated logs
# "%u" a unique number to resolve conflicts
# "%%" translates to a single percent sign
#
# Thus for example a pattern of "%t/java%g.log" with a count
# of 2 would typically cause log files to be written on Unix to
# "/var/tmp/java2.log"
#
# Type: String
# Recognition: Startup
# Default: "%t/cimclient_trace_%g.txt"
#
#sblim.wbem.traceFileLocation=%t/cimclient_trace_%g.txt

# Sets the maximum size in bytes of a single log file. When the limit is
# reached a new file is created. A limit of zero will create a new file
# for every trace record !
#
# Type: Integer
# Recognition: Startup
# Range: 0 .. Integer.MAX_VALUE
# Default: 1.000.000
#
#sblim.wbem.traceFileSizeLimit=1000000

# Sets the number of log files to cycle through. When the number is
# exceeeded the oldest file is dropped.
#
# Type: Integer
# Recognition: Startup
# Range: 1 .. Integer.MAX_VALUE
# Default: 5
#
#sblim.wbem.traceFileCount=5

# The timeout for http requests. A timeout of zero is interpreted as
# infinite timeout.
#
# Type: Integer
# Recognition: Anytime
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#sblim.wbem.httpTimeout=0

# The size of the internal http connection pools. Each
# WBEMClient instance has its own http connection pool. A
# positive value defines the number of connections, zero that no connection
# will be reused, and -1 all connections will be reused (when it's
# possible).
#
# Type: Integer
# Recognition: Anytime
# Range: -1, 0, 1 .. Integer.MAX_VALUE
# Default: 16
#
#sblim.wbem.httpPoolSize=16

# The Java class name of the authentication module to use for http 
# authentication.
#
# Type: String
# Recognition: On next authentication
# Range: org.sblim.cimclient.internal.http.WwwAuthInfo, org.sblim.cimclient.internal.http.PegasusLocalAuthInfo or any self-written subclass of org.sblim.cimclient.internal.http.AuthInfo
# Default: org.sblim.cimclient.internal.http.WwwAuthInfo
#
#sblim.wbem.httpAuthModule=org.sblim.cimclient.internal.http.WwwAuthInfo

# The WWW-Authenticate information to use when sending the first request
# to a server.
#
# Note: This string must exactly match what the server returns in the
# WWW-Authenticate field of an HTTP 401 response when authentication
# fails.  The following two strings are examples:
#
# Basic realm="Secure Area"
# Digest realm="testrealm@host.com",qop="auth,auth-int",nonce="dcd98b7102dd2f0e8b11d0f600bfb0c093",opaque="5ccc069c403ebaf9f0171e9517f40e41"
#
# Type: String
# Recognition: On next authentication
# Range: Basic, Digest
# Default: none
#
#sblim.wbem.httpWwwAuthenticateInfo=

# Specifies if MPOST is used for transmitting http messages. If false, POST is used.
# 
# Type: Boolean
# Recognition: Anytime
# Range: true, false 
# Default: true
#
#sblim.wbem.httpMPOST=true

# Specifies if chunking is used for transmitting http messages.
# 
# Type: Boolean
# Recognition: Anytime
# Range: true, false 
# Default: true
#
#sblim.wbem.httpChunking=true

# Specifies the http protocol version to use. This option is useful if the protocol negotiation fails.
# 
# Type: String
# Recognition: Anytime
# Range: 1.0, 1.1 
# Default: 1.1
#
#sblim.wbem.httpVersion=1.1

# Specifies how often the client will retry to connect to a CIMOM which
# refused the connection in the first place.
# 
# Type: Integer
# Recognition: Anytime
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#
#sblim.wbem.httpConnectionRetries=0

# Specifies if the client will discard and request again http documents
# with less than a given number of bytes.
# 
# Type: Boolean
# Recognition: Anytime
# Range: true, false
# Default: false
#
#sblim.wbem.httpEnableContentLengthRetry=false

# Specifies the threshold above which a http document is regarded as valid
# by the content length retry algorithm.
# 
# Type: Integer
# Recognition: Anytime
# Range: 0 .. Integer.MAX_VALUE
# Default: 50
#
#sblim.wbem.httpContentLengthThreshold=50

# Specifies the XML parser for parsing CIM-XML responses.
# The SAX parser is the default choice since it is fast, resource saving
# and interoperable. The streaming algorithm of the PULL parser uses the
# fewest possible resources but at the prize to keep the CIMOMs response
# open for a long time. That works with many but not all CIMOMs. The DOM
# parser is slow and resource hungry but nice to debug.
#
# Type: Discrete
# Recognition: Anytime
# Range: DOM, PULL, SAX
# Default: SAX
#
#sblim.wbem.cimxmlParser=SAX

# Enables or disables tracing of CIM-XML communication. The trace is sent
# to an output stream the application has to set via the LogAndTraceManager
# class.
# 
# Type: Boolean
# Recognition: Anytime
# Range: true, false
# Default: false
#
#sblim.wbem.cimxmlTracing=false

# Specifies the stream to use for tracing CIM-XML communication in the event
# the application does not set one via the LogAndTraceManager class.  This
# stream can either be standard output (System.out), standard error output
# (System.err) or a filename to be opened by the client.
#
# Note: This property has no effect unless sblim.wbem.cimxmlTracing is set to
# true.
#
# Note: This property has no effect if the application already set the stream
# prior to client initialization.  If the application sets the stream after
# client initialization, the stream specified by this property is overridden.
#
# Note: If a filename is specified, it is opened and all CIM-XML communication
# is written to it - no checks are made for an existing file or for filling up
# the disk.  USE WITH CAUTION.
#
# Type: String
# Recognition: Startup
# Range: System.out, System.err, filename
# Default: none
#
#sblim.wbem.cimxmlTraceStream=

# Tells the XML builder how to sign embedded objects. This is necessary due to
# the non-consequent handling of embedded objects on different CIMOMs.
# "AttribOnly"       - only the EmbeddedObject="instance/object" is used
#                      (should be good for Pegasus)
# "EmbObjQuali"      - on qualified CIM-XML elements the EmbeddedObject qualifier is used
#                      for embedded classes and instances
# "EmbObjAndEmbInstQuali" - 
#                      on qualified CIM-XML elements the EmbeddedObject qualifier is used
#                      for embedded classes and the EmbeddedInstance="className" qualifier
#                      is used for embedded instances 
# Type: String
# Recognition: Anytime
# Range: AttribOnly, EmbObjQuali, EmbObjAndEmbInstQuali
# Default: AttribOnly
#
#sblim.wbem.cimxmlEmbObjBuilder=AttribOnly

# If set the type of valueless EmbeddedObjects are mapped to CLASS_T. It should work well
# with OpenPegasus-2.7.0.
# If unset no type mapping is done for valuless EmbeddedObjects.  
#
# Type: Boolean
# Default: true
#
#sblim.wbem.cimxmlParser.strictEmbObjTypes=true

# If set to false, the embedded object entity in all requests is in mixed case
# (EmbeddedObject) per DSP0203.  If set to true, the embedded object entity is in
# upper case (EMBEDDEDOBJECT) - this works with some older CIMOMs, such as OpenPegasus 
# 2.6.1 and 2.7.0.
#
# <!ENTITY % EmbeddedObject "EmbeddedObject (object|instance) #IMPLIED">
#
# Type: Boolean
# Recognition: Startup
# Range: true, false
# Default: true
#
#sblim.wbem.cimxmlBuilder.upperCaseEmbObjEntities=true

# If set to true, SSL handshakes are performed after an SSL socket is created by the
# socket factory.  If set to false, handshakes are not performed, which is useful if
# if the handshake has already taken place.
#
# Type: Boolean
# Recognition: Anytime
# Default: true
#
#sblim.wbem.performSslHandshake=true

# If set to false, SSL handshakes are not synchronized.  If set to true, SSL 
# handshakes are synchronized as a workaround for an IBM JSSE problem with thread-safe
# handshakes.
#
# Note: This property has no effect unless sblim.wbem.performSslHandshake is set to 
# true.
#
# Type: Boolean
# Recognition: Anytime
# Default: false
#
#sblim.wbem.synchronizedSslHandshake=false

# If set to true, socket connections are attempted with the timeout value defined by 
# sblim.wbem.socketConnectTimeout.  If set to false, socket connections are attempted
# without a timeout.  Using a timeout for socket connections is the preferred method
# but may introduce intermittent, significant performance impacts during the connection 
# process in Java 5+ (see Sun bug 5092063).   
#
# Type: Boolean
# Recognition: Anytime
# Default: true
#
#sblim.wbem.socketConnectWithTimeout=true

# The timeout for socket connect requests.  A timeout of zero is interpreted as
# infinite timeout.
#
# Note: This property has no effect unless socket connection with timeout is
# enabled (see the sblim.wbem.socketConnectWithTimeout property).
#
# Type: Integer
# Recognition: Anytime
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#
#sblim.wbem.socketConnectTimeout=0

# The idle timeout between socket requests after which the socket is
# automatically reset (closed, then reopened). A timeout of zero is
# interpreted as infinite timeout.
#
# Type: Integer
# Recognition: Anytime
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#sblim.wbem.socketIdleTimeout=0

# Turn on/off usage of the default user/password, which can be used
# if the CIMOM requires a "garbage" credential.  If set to false,
# user-supplied credentials will be applied.  If set to true,
# default credentials will be applied when both the user-supplied
# principal and credential are null/empty.

# Type: Boolean
# Recognition: Startup
# Default: false
#
#sblim.wbem.default.authorization.enabled=false

# The principal of the user for the "garbage" credential.
#
# Note: This property has no effect unless default authorization is
# enabled (see the sblim.wbem.default.authorization.enabled property)
# AND both the user-supplied principal and credential are null/empty.
#
# Type: String
# Recognition: Startup
# Default: 'default'
#
#sblim.wbem.default.principal=default

# The credential of the user for the "garbage" credential.
#
# Note: This property has no effect unless default authorization is
# enabled (see the sblim.wbem.default.authorization.enabled property)
# AND both the user-supplied principal and credential are null/empty.
#
# Type: String
# Recognition: Startup
# Default: 'default'
#
#sblim.wbem.default.credential=default

# The file path of the SSL keystore.
#
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Default: none
#
#javax.net.ssl.keyStore=

# The type of the keystore.
# 
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Range: PKCS12, JKS, ...
# Default: JKS
#
#javax.net.ssl.keyStoreType=JKS

# The password of the keystore.
# 
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Default: none
#
#javax.net.ssl.keyStorePassword=

# The file path of the SSL truststore.
# 
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Default: none
#
#javax.net.ssl.trustStore=

# The type of the truststore.
# 
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Range: PKCS12, JKS, ...
# Default: JKS
#
#javax.net.ssl.trustStoreType=JKS

# The password of the truststore.
# 
# Type: String
# Recognition: On initialization of a new client / next call to addListener()
# Default: none
#
#javax.net.ssl.trustStorePassword=

# Determines if a HTTPS client will attempt to authenticate the server
# (i.e. CIMOM) by verifying the server certificate. If false, do not attempt
# verification. If true, the client will attempt to verify the server certificate
# against the contents of the truststore; in this case a valid path must be
# defined in "javax.net.ssl.trustStore" or no connection will be permitted. 
#
# Type: Boolean
# Recognition: On initialization of a new client
# Default: false
#
#sblim.wbem.sslClientPeerVerification=false

# Determines how a HTTPS listener will handle authentication of a client 
# (i.e. indication sender). If set to "ignore", do not attempt verification.
# If set to "accept" or "require", the listener will attempt to verify the
# sender against the contents of the truststore; in this case a valid path must
# be defined in "javax.net.ssl.trustStore" or no connection will be permitted. 
#
# "ignore"  - do not examine the client certificate
# "accept"  - examine client certificate if presented; do not fail if 
#             not presented
# "require" - examine client certificate; fail if not presented
#
# Type: String
# Recognition: On next call to addListener()
# Range: ignore, accept, require
# Default: ignore
#
#sblim.wbem.sslListenerPeerVerification=ignore

# The provider to use for creation of SSL client sockets. For IBMJSSE2 provider 
# "com.ibm.jsse2.IBMJSSEProvider2" has to be used.
# 
# Security property: JRE global access via Security.setProperty() and Security.getProperty() !
# 
# Type: Java class name
# Recognition: On next SSL connection
# Default: Security.getProviders("SSLContext.SSL")
#
#sblim.wbem.sslSocketProvider=

# The provider to use for creation of SSL server sockets.
# 
# Security property: JRE global access via Security.setProperty() and Security.getProperty() !
# 
# Type: Java class name
# Recognition: On next SSL connection
# Default: Security.getProviders("SSLContext.SSL")
#
#sblim.wbem.sslServerSocketProvider=

# The comma-separated list of cipher suites that are to be disabled by
# the client when connecting via an SSL socket.  In general, this is the
# list of cipher suites considered "too weak" for use in a particular
# environment.
#
# Type: String
# Recognition: On initialization of a new client
# Default: none
# 
#sblim.wbem.sslClientCipherSuitesToDisable=

# The comma-separated list of cipher suites that are to be disabled by
# the listener when connecting via an SSL socket.  In general, this is
# the list of cipher suites considered "too weak" for use in a particular
# environment.
#
# Type: String
# Recognition: On next call to addListener()
# Default: none
# 
#sblim.wbem.sslListenerCipherSuitesToDisable=

# The protocol used for SSLContext.getInstance(String protocol). For IBMJSSE2 provider it can
# be "SSL_TLS".
#
# Security property: JRE global access via Security.setProperty() and Security.getProperty()
# Recognition: On next SSL connection
# Default: "SSL"
#
#ssl.Protocol=

# The protocol used for SSLContext.getInstance(String protocol) by a client.  This property
# overrides any value set via the ssl.Protocol property.
#
# Recognition: On next SSL connection
# Default: none
#
#sblim.wbem.sslClientProtocol=

# The protocol used for SSLContext.getInstance(String protocol) by a listener.  This property
# overrides any value set via the ssl.Protocol property.
#
# Recognition: On next SSL connection
# Default: none
#
#sblim.wbem.sslListenerProtocol=

# The key manager factory algorithm name.
# 
# Security property: JRE global access via Security.setProperty() and Security.getProperty() !
# 
# Type: String
# Recognition: On next SSL connection
# Range: IbmX509, SunX509, ... 
# Default: JRE specific
#
#ssl.KeyManagerFactory.algorithm=

# The trust manager factory algorithm name.
# 
# Security property: JRE global access via Security.setProperty() and Security.getProperty() !
# 
# Type: String
# Recognition: On next SSL connection
# Range: IbmX509, SunX509, ... 
# Default: JRE specific
#
#ssl.TrustManagerFactory.algorithm=

# The timeout for http connections of an indication listener. A timeout of
# zero is interpreted as infinite timeout.
# 
# Type: Integer
# Unit: Milliseconds
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 10000
#
#sblim.wbem.listenerHttpTimeout=10000

# The header timeout for http connections of an indication listener.  The
# header timeout is defined as the maximum amount of time allowed to read
# in the entire http header.  A timeout of zero is interpreted as infinite
# timeout.
#
# Note: One form of DoS attack sends periodic http header lines in an
# attempt to keep the socket open indefinitely.  This timeout can be used
# to thwart such an attempt.
#
# Type: Integer
# Unit: Milliseconds
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 30000
#
#sblim.wbem.listenerHttpHeaderTimeout=30000

# The maximum allowable timeouts an http connection of an indication
# listener can have before the client ignores it.  In other words, the
# number of times an IP exceeds sblim.wbem.listenerHttpTimeout and
# sblim.wbem.listenerHttpHeaderTimeout before it is blocked.  A value of
# zero is interpreted as unlimited timeouts.
#
# Type: Integer
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#
#sblim.wbem.listenerHttpMaxAllowedTimeouts=0

# The size of the thread pool for the connection handlers of the indication
# for http connections of an indication listener. This is the maximum
# number of handler threads the pool might create on heavy load.
# A value of -1 is interpreted as infinity. 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: -1 .. Integer.MAX_VALUE
# Default: 8
#
#sblim.wbem.listenerPoolMaxSize=8

# The minimal number of connection handlers of the indication listener that
# will be kept open by the thread pool regardless of the current load.
# 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 2
#
#sblim.wbem.listenerPoolMinSize=2

# The maximum number of queued connections (the fixed capacity of the 
# ArrayBlockingQueue of pending connections incoming to the listener).
# Whereas increasing this number will result in a correspondingly greater
# memory usage, making the number too small can result in HTTP 503
# "Service temporarily overloaded" returned to server if there is no room
# in queue for an incoming connection. 
# 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 1 .. Integer.MAX_VALUE
# Default: 32
#
#sblim.wbem.listenerQueueMaxSize=32

# The number of queued connections that is tolerated before the thread
# pool creates an additional handler thread. Increasing this value leads to
# a less "nervous" creation/destruction of handlers. However it
# makes the listener more vulnerable to frozen connections.
# 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 2
#
#sblim.wbem.listenerBacklog=2

# The idle time of a worker that is tolerated before the worker is
# destroyed by the thread pool. By setting the minimal pool size >0 you can
# protect a given number of worker from destruction.
# 
# Type: Long
# Unit: Milliseconds
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Long.MAX_VALUE
# Default: 30000
#
#sblim.wbem.listenerHandlerMaxIdle=30000

# The maximum number of queued events (the fixed capacity of the 
# LinkedList of indications awaiting delivery to the listener).  When
# the maximum is reached, the oldest indications are discarded to make
# room for the newest ones.  A value of 0 is interpreted as infinity. 
# 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 0 .. Integer.MAX_VALUE
# Default: 0
#
#sblim.wbem.listenerMaxQueuedEvents=0

# If set to true, reliable indication support is enabled and indications
# are processed accordingly.  If set to false, reliable indication 
# support is disabled and indications are passed directly to listener.
#
# If reliable indication support is enabled, incoming indications are
# handled as documented in DSP1054 which includes queuing unexpected 
# indications, caching all indications for the duration of their sequence 
# identifier lifetime, and logging missing, duplicate and out-of-order 
# indications.
#
# The sequence identifier lifetime is defined as:
#   DeliveryRetryAttempts * DeliveryRetryInterval * 10
# These values can be set by the sblim.wbem.listenerDeliveryRetryAttempts
# and sblim.wbem.listenerDeliveryRetryInterval properties below.
#
# Unexpected indications are queued in either a linked list or a hash
# table based on the sblim.wbem.listenerReliableIndicationHashtableCapacity
# property below.  The linked list is better suited for a small number of 
# listener destinations per WBEMListener while the hash table is better 
# suited for a large number.
#
# Type: Boolean
# Recognition: On next creation of a WBEMListener
# Default: false
#
#sblim.wbem.listenerEnableReliableIndications=false

# The default value to use for the CIM_IndicationService DeliveryRetryAttempts
# property.  See DSP1054 for details on reliable indications.
#
# Note: This property has no effect unless reliable indication support is
# enabled.  See the sblim.wbem.listenerEnableReliableIndications property.
# 
# Type: Long
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 1 .. 1000
# Default: 3
#
#sblim.wbem.listenerDeliveryRetryAttempts=3

# The default value to use for the CIM_IndicationService DeliveryRetryInterval
# property.  See DSP1054 for details on reliable indications.
#
# Note: This property has no effect unless reliable indication support is
# enabled.  See the sblim.wbem.listenerEnableReliableIndications property.
# 
# Type: Long
# Unit: Seconds
# Recognition: On next creation of a WBEMListener
# Range: 1 .. 86400
# Default: 20
#
#sblim.wbem.listenerDeliveryRetryInterval=20

# The default value to use for the reliable indication handler's initial
# hash table capacity.  A value of 0 indicates use a linked list instead.
# Linked lists are better suited for a small number of listener destinations
# per WBEMListener while hash tables are better suited for a large number.
#
# Note: This property has no effect unless reliable indication support is
# enabled.  See the sblim.wbem.listenerEnableReliableIndications property.
# 
# Type: Integer
# Unit: Count
# Recognition: On next creation of a WBEMListener
# Range: 0 .. 25000
# Default: 0
#
#sblim.wbem.listenerReliableIndicationHashtableCapacity=0

# The filter to use for tracing of incoming indications at the FINE level.
#
# If string is empty, no tracing of incoming indications will occur.  If
# string is not empty, it identifies one or more properties to be included
# in the trace of all incoming indications.  An optional class can be used
# to filter the output to include only those indications that contain the
# substring.  For example, to trace the SequenceContext and SequenceNumber
# properties of all alerts, use the following:
# 
#    alert:sequencecontext,sequencenumber
#
# To trace the IndicationTime of all indications, use the following:
# 
#    indicationtime
#
# Note: This property has no effect unless tracing is enabled.  See the
# sblim.wbem.traceFileLevel property.
#
# Type: String
# Recognition: On next creation of WBEMListener
# Format: [class:]property[,property]*
#
#sblim.wbem.listenerIndicationTraceFilter=

# If set to true, a property will be added to all indications that identifies
# the sender's IP address.  If set to false, the property will not be added.
#
# The property is a CIMProperty with:
#   name = "SBLIMJCC_SenderIPAddress"
#   type = CIMDataType.STRING_T
#   value = String returned by InetAddress.getHostAddress() (i.e. 1.2.3.4)
#
# Type: Boolean
# Recognition: On next creation of a WBEMListener
# Default: false
#
#sblim.wbem.listenerAddSenderIPAddress=false

# If set to true, numeric string values passed to the java.lang.Double
# constructor or its parseDouble method will be checked to make sure they
# are not in the range that hangs Java 6- (see Sun bug 4421494).  If
# set to false, the string values will not be checked.
#
# Note: This property should only be set to true if running on Java 5 or
# Java 6 prior to update 24.
#
# Type: Boolean
# Recognition: Startup
# Default: true
#
#sblim.wbem.verifyJavaLangDoubleStrings=true

# If set to true, numeric key data types in a CIMInstance's CIMObjectPath
# will be synchronized to match those of the corresponding keys within
# the CIMInstance's CIMProperty[].  If set to false, the numeric key data
# types will not be synchronized. 
#
# Note: Only numeric key data types in CIMInstances from CIMOM responses
# are synchronized, application calls to the CIMInstance constructor are
# not affected.
#
# Type: Boolean
# Recognition: Startup
# Default: false
#
#sblim.wbem.synchronizeNumericKeyDataTypes=false

# If set to true, gzip encoding is enabled.  If set to false, gzip encoding
# is not enabled.  When enabled, outgoing requests include the HTTP header
# "Accept-Encoding: gzip" to indicate to the CIMOM that the client handles
# message bodies compressed with gzip.  If the incoming response includes
# "Content-Encoding: gzip" the message body will be decompressed with gzip
# before being processed.
#	 
# Note: This property does not affect indications or outgoing requests.
#
# Type: Boolean
# Recognition: Anytime
# Default: false
#
#sblim.wbem.enableGzipEncoding=false

# If set to true, the CIM-XML parser will allow empty LOCALNAMESPACEPATH
# elements in incoming responses.  If set to false, the parser will not
# allow empty LOCALNAMESPACEPATH elements.
#
# Note: Some older CIMOMs sent empty LOCALNAMESPACEPATHs, relying on the
# client to provide the local namespace path.  This is a violation of
# DSP0201, which dictates that LOCALNAMESPACEPATH must contain at least
# one NAMESPACE child.  By default, this property is set to false so the
# client can adhere to the CIM-XML specifications.  Set this property to
# true if "LOCALNAMESPACEPATH requires NAMESPACE" exceptions occur while
# interacting with one of these older CIMOMs.
#
# Type: Boolean
# Recognition: Anytime
# Default: false
#
#sblim.wbem.cimxmlParser.allowEmptyLocalNameSpacePath=false